-- HospitalDM developed and written by Rachel Griepentrog
-- Oringinally Written 10/9/2020
-----------------------------------------------------------
IF NOT EXISTS(SELECT * FROM sys.databases
  WHERE NAME = N' HospitalDM')
  CREATE DATABASE HospitalDM

GO 
USE Hospital

--
-- Drop all tables if they exist, starting with the Fact Table

IF EXISTS(
SELECT *
	FROM sys.tables
	WHERE NAME = N'FactPerscription'
	)
	DROP TABLE FactPerscription;
--
IF EXISTS(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'DimDoctor'
	)
	DROP TABLE DimDoctor;
--
IF EXISTS(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'DimPharmacy'
	)
	DROP TABLE DimPharmacy;
--
IF EXISTS(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'DimPatient'
	)
	DROP TABLE DimPatient;
-- 
IF EXISTS(
	SELECT *
	FROM sys.tables
	WHERE NAME = N'DimDate'
	)
	DROP TABLE DimDate;
-- 
-- Create the tables in reverse order, Fact goes last. 

CREATE TABLE DimDate 
(Date_SK 					INT CONSTRAINT pk_date_sk PRIMARY KEY, 
Date DATE,
FullDate 					NCHAR(10), -- Date in MM-dd-yyyy format
DayOfMonth 					INT, -- Field will hold day number of Month
DayName 					NVARCHAR(9), -- Contains name of the day, Sunday, Monday 
DayOfWeek 					INT, -- First Day Sunday=1 and Saturday=7
DayOfWeekInMonth 			INT, -- 1st Monday or 2nd Monday in Month
DayOfWeekInYear 			INT,
DayOfQuarter 				INT,
DayOfYear 					INT,
WeekOfMonth 				INT, -- Week Number of Month 
WeekOfQuarter 				INT, -- Week Number of the Quarter
WeekOfYear 					INT, -- Week Number of the Year
Month 						INT, -- Number of the Month 1 to 12{}
MonthName 					NVARCHAR(9), -- January, February etc
MonthOfQuarter 				INT, -- Month Number belongs to Quarter
Quarter 					NCHAR(2), 
QuarterName 				NVARCHAR(9), -- First,Second...
Year 						INT, -- Year value of Date stored in Row
YearName 					NCHAR(7), -- CY 2017,CY 2018
MonthYear 					NCHAR(10), -- Jan-2018,Feb-2018
MMYYYY 						INT,
FirstDayOfMonth 			DATE,
LastDayOfMonth 				DATE,
FirstDayOfQuarter 			DATE,
LastDayOfQuarter 			DATE,
FirstDayOfYear 				DATE,
LastDayOfYear 				DATE,
IsHoliday					BIT, -- Flag 1=National Holiday, 0-No National Holiday
IsWeekday 					BIT, -- 0=Week End ,1=Week Day
Holiday 					NVARCHAR(50), -- Name of Holiday in US
Season 						NVARCHAR(10) -- Name of Season
);
--
CREATE TABLE DimDoctor
(Doctor_SK 						INT IDENTITY (1,1) NOT NULL CONSTRAINT pk_Doctor_sk
PRIMARY KEY,
Doctor_AK 						INT NOT NULL,
Doctor_First_Name 				NVARCHAR(15) NOT NULL,
Doctor_Last_Name 				NVARCHAR(30) NOT NULL,
Branch_Name  					NVARCHAR(15) NOT NULL, 
Branch_Description 				NVARCHAR (100) NOT NULL, 
Hire_Date 						DATE NOT NULL, 
Hospital_Name 					NVARCHAR (30) NOT NULL,
Hospital_City 					NVARCHAR (50) NOT NULL, 
Hospital_State 					NVARCHAR (3) NOT NULL, 
Hospital_Zip_code 				NVARCHAR (11) NOT NULL, 
Hospital_Phone_Number 			NVARCHAR (50) NOT NULL
);
--
CREATE TABLE DimPharmacy
(Pharmacy_SK 					INT IDENTITY (1,1) NOT NULL CONSTRAINT pk_Pharmacy_sk 
PRIMARY KEY,
Pharmacy_AK 					INT NOT NULL,
Pharmacy_Name 					NVARCHAR (100) NOT NULL, 
Pharmacy_City 					NVARCHAR (50) NOT NULL, 
Pharmacy_State 					NVARCHAR (3) NOT NULL, 
Pharmacy_Zip_Code 				NVARCHAR (11) NOT NULL, 
Pharmacy_Phone_Number 			NVARCHAR (50) NOT NULL, 
Perscription_Name 				NVARCHAR (50) NOT NULL, 
Perscription_Brand 				NVARCHAR (50) NOT NULL
);
--
CREATE TABLE DimPatient
(Patient_SK 					INT IDENTITY(1,1) NOT NULL CONSTRAINT pk_Patient_sk 
PRIMARY KEY,
Patient_AK INT NOT NULL,
Patient_First_Name 				NVARCHAR (15) NOT NULL, 
Patient_Last_Name 				NVARCHAR (30) NOT NULL,
Patient_Street 					NVARCHAR (50) NOT NULL,
Patient_City 					NVARCHAR (50) NOT NULL, 
Patient_State 					NVARCHAR (2) NOT NULL, 
Patient_Zip_Code 				NVARCHAR (11) NOT NULL, 
Patient_Phone_Number 			NVARCHAR (50) NOT NULL,
Patient_Gender 					NVARCHAR (11) NOT NULL, 
Patient_Birth_Date 				Date NOT NULL, 
Patient_Insurance_Name 			NVARCHAR (50) NOT NULL
);
--
CREATE TABLE FactPerscription
(OrderID_DD 					INT NOT NULL, -- Need a degenerative dimension to create the PK
Order_Date_Key 					INT NOT NULL,
Ship_Date_Key 					INT NOT NULL,
Perscription_Quanity 			INT ,
Perscription_Price 				MONEY,
Insurance_Coverage 				MONEY,
Perscription_Sales_Price 		MONEY,
Doctor_SK 						INT NOT NULL,
Pharmacy_SK 					INT NOT NULL,
Patient_SK 						INT NOT NULL
CONSTRAINT pk_fact_Perscription PRIMARY KEY (OrderID_DD,Doctor_SK,Pharmacy_SK,Patient_SK,Order_Date_Key, Ship_Date_Key),
CONSTRAINT fk_order_dim_date FOREIGN KEY (Order_Date_Key) REFERENCES DimDate(Date_SK),
CONSTRAINT fk_ship_dim_date FOREIGN KEY (Ship_Date_Key) REFERENCES DimDate(Date_SK),
CONSTRAINT fk_dim_Doctor FOREIGN KEY (Doctor_SK) REFERENCES DimDoctor(Doctor_SK),
CONSTRAINT fk_dim_Pharmacy FOREIGN KEY (Pharmacy_SK) REFERENCES DimPharmacy(Pharmacy_SK),
CONSTRAINT fk_dim_Patient FOREIGN KEY (Patient_SK) REFERENCES DimPatient(Patient_SK)
);